<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zwx.transmanage.mapper.PublishNotificationMapper">

    <resultMap id="PublishNotificationVoMap" type="com.zwx.transmanage.domain.vo.PublishNotificationVo">
        <id column="ID" property="id"/>
        <result column="notificationTitle" property="notificationTitle"/>
        <result column="notificationContent" property="notificationContent"/>
        <result column="publishBy" property="publishBy"/>
        <result column="publishDate" property="publishDate"/>
        <result column="createBy" property="createBy"/>
        <result column="createDate" property="createDate"/>
        <result column="updateBy" property="updateBy"/>
        <result column="updateDate" property="updateDate"/>
        <result column="status" property="status"/>
        <result column="stick" property="stick"/>
        <result column="messageType" property="messageType"/>
        <result column="messageAttachment" property="messageAttachment"/>
        <result column="isDelete" property="isDelete"/>
    </resultMap>

    <select id="countPublishNotification" resultType="Integer">
        select count(1) from `publishnotification` where 1=1 and isDelete = '2';
    </select>

    <select id="selectAllPublishNotification" resultMap="PublishNotificationVoMap">
        select * from `publishnotification`
        where 1=1 and isDelete = '2' order by updateDate desc
        limit #{pageModel.startRow},#{pageModel.pageSize}
    </select>

    <insert id="addPublishNotification" parameterType="com.zwx.transmanage.domain.dto.PublishNotificationDto">
        insert into `publishnotification` (`notificationTitle`,`notificationContent`,`publishBy`,`publishDate`,`createBy`,`createDate`,
        `updateBy`,`updateDate`,`status`,`stick`,`messageType`,`messageAttachment`,`isDelete`)
        VALUES (#{notificationTitle},#{notificationContent},#{publishBy},#{publishDate},#{createBy},now(),
        #{updateBy},now(),#{status},#{stick},#{messageType},#{messageAttachment},2);
    </insert>

    <delete id="delete" parameterType="Integer">
        delete from `publishnotification` where 1=1 and `id`= #{id}
    </delete>

    <update id="update" parameterType="com.zwx.transmanage.domain.dto.PublishNotificationDto">
        update `publishnotification`
        set `notificationTitle` = #{notificationTitle},
        `notificationContent` = #{notificationContent},
        `publishBy` = #{publishBy},
        `publishDate` = #{publishDate},
        `updateBy` = #{updateBy},
        `updateDate` = now(),
        `status` = #{status},
        `stick` = #{stick},
        `messageType` = #{messageType},
        `messageAttachment` = #{messageAttachment}
        where 1=1 and id = #{id}
    </update>

    <select id="selectPublisNotificationById" resultType="com.zwx.transmanage.domain.vo.PublishNotificationVo">
        select * from `publishnotification` where id=#{id}
    </select>

    <update id="shield" parameterType="com.zwx.transmanage.domain.dto.PublishNotificationDto">
        update `publishnotification`
        set `isDelete` = 1,
        `updateBy` = #{updateBy},
        `updateDate` = now()
        where id = #{id}
    </update>

    <select id="selectAllPublish" resultMap="PublishNotificationVoMap">
        select * from `publishnotification` where `status` = 0 and `isDelete` = 2 order by publishDate,updateDate asc;
    </select>

    <select id="selectPublishNotificationByMessageType" resultMap="PublishNotificationVoMap">
        select * from `publishnotification` where `messageType` = #{messageType}
    </select>
</mapper>